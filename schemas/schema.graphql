type Query {
  schemaOrg: SchemaOrg!
}

type SchemaOrg {
  nodes(type: Type = ALL, absoluteIRI: Boolean = false): [Property!]!
  class(id: String!, absoluteIRI: Boolean = false): Class
  nodeCount: Int!
}

interface Node {
  id: String!
  types: [String!]!
  name: String!
  description: String!
}

type Class implements Node {
  id: String!
  types: [String!]!
  name: String!
  description: String!
  properties: [Property!]!
}

type Property implements Node {
  id: String!
  types: [String!]!
  name: String!
  description: String!
  schemas: [DataTypeNode!]!
}

type DataTypeNode implements Node {
  id: String!
  types: [String!]!
  name: String!
  description: String!
  field: FieldValue!
}

enum FieldValue {
  URL
  Text
  Unknown
}

enum Type {
  CLASS
  ALL
}
